version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${APP_PORT}:3000'
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webnet
    restart: always

  postgres:
    image: postgres:17
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - webnet # Attach postgres to the webnet network
    restart: always

  nginx: # <-- Add Nginx service (for reverse proxying when you deploy)
    image: nginx:latest # Use the latest Nginx image
    ports:
      - '80:80' # Maps host port 80 to container port 80 (HTTP) - For production
      - '443:443' # Maps host port 443 to container port 443 (HTTPS) - For production
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf # Mount Nginx configuration
      - certs:/etc/letsencrypt # Volume for Let's Encrypt certificates
    depends_on:
      - app # Ensure app is running before Nginx
    networks:
      - webnet
    restart: always

networks:
  webnet: # Define a network for communication

volumes:
  postgres_data:
  certs:
