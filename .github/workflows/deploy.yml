name: CI/CD Pipeline for NestJS App on AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:buildcache,mode=max

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          known_hosts: 'strict'
          if_key_exists: replace

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            # Create .env file
            cat > .env << 'EOL'
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            # Add other environment variables here
            EOL

            # Pull latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:latest

            # Stop and remove existing container
            docker stop nestjs_sandbox || true
            docker rm nestjs_sandbox || true

            # Run Prisma migrations
            docker run --rm \
              --env-file .env \
              ${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:latest \
              npx prisma migrate deploy

            # Run new container
            docker run -d \
              --name nestjs_sandbox \
              --restart unless-stopped \
              -p 3000:3000 \
              --env-file .env \
              ${{ secrets.DOCKERHUB_USERNAME }}/nestjs_sandbox:latest

            # Clean up unused images
            docker image prune -f
          EOF

      - name: Verify Deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USERNAME }}@${{ secrets.AWS_EC2_HOST }} "docker ps | grep nestjs_sandbox"
